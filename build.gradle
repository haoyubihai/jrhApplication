// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext{
        kotlin_version  = '1.3.61'
        material_version = '1.2.0-alpha05'
        booster_version = '1.6.0'
    }

    repositories {
        google()
        jcenter()
        mavenLocal()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url 'https://oss.sonatype.org/content/repositories/public/' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        //booster
        classpath "com.didiglobal.booster:booster-gradle-plugin:$booster_version"

        /* 👇👇👇👇 用于列出工程中依赖的 AAR 中使用的所有 Android* 权限。 $ ./gradlew listPermissions 👇👇👇👇 */
        classpath "com.didiglobal.booster:booster-task-list-permission:$booster_version"

        /* 👇👇👇👇 引用这个模块 👇👇👇👇 用于列出工程中依赖的 AAR* 中使用的所有的动态库。$ ./gradlew listSharedLibraries*/
        classpath "com.didiglobal.booster:booster-task-list-shared-library:$booster_version"

        //打包
        classpath 'com.meituan.android.walle:plugin:1.1.6'

    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        
    }
}

subprojects {

}

task clean(type: Delete) {
    delete rootProject.buildDir
}


//def getProjects(){
//    this.project.allprojects.eachWithIndex{ Project project, int index ->
////        println(project.name+"----${index}")
//    }
//}
//
//getProjects()
//
//def getChildProjects(){
//    this.project.subprojects {
////        p-> println("sub----${p.name}")
//    }
//}
//
//
//println("root--path = ${getRootDir().absolutePath}")
//println("build--path = ${getBuildDir().absolutePath}")
//println("project--path = ${getProjectDir().absolutePath}")
//
//
//getChildProjects()
//
//this.beforeEvaluate {
////    println "开始配置之前"
//}
//this.afterEvaluate {
////    println "开始配置之后"
//}
//
//this.gradle.buildFinished {
////    println "build执行完"
//}
//
//this.gradle.beforeProject {
////    println "project beforeProject"
//}
//this.gradle.afterProject {
////    println "project afterProject"
//}


//project("app"){  project->
//    println("base----${project.name}")
//
//}
//
//copy {
//    from file("gradlew.bat")
//    into getProjectDir().path+"/aa"
//}

//fileTree("app"){ FileTree tr->
//    tr.visit { FileTreeElement fileTreeElement->
//
//        println fileTreeElement.file.name
//    }
//
//}
